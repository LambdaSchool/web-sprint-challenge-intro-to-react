{"version":3,"sources":["components/Filters.js","components/Character.js","components/Characters.js","components/SiteTitle.js","App.js","index.js","theme/index.js"],"names":["Filters","props","showRick","showMorty","showEveryone","Button","color","onClick","StyledCharacterContainer","styled","div","Character","variationName","variationImage","className","Card","CardImg","bottom","width","src","alt","CardTitle","tag","StyledCharacters","Characters","variations","console","log","map","variation","key","id","image","name","StyledSiteTitle","style","SiteTitle","siteTitle","axios","require","default","App","useState","characterOfInterest","setCharacterOfInterest","setVariations","endPointAlive","useEffect","get","then","res","data","results","ReactDOM","render","theme","document","getElementById"],"mappings":"kUAuBeA,EAnBC,SAACC,GAAW,IACjBC,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,UAAWC,EAAgBH,EAAhBG,aAI5B,OACI,6BACI,kBAACC,EAAA,EAAD,CAAQC,MAAO,UAAUC,QAASL,GAAlC,8BAAgF,KAChF,kBAACG,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAASJ,GAAjC,+BAAiF,KACjF,kBAACE,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAASH,GAAjC,6BAAkF,O,mRCP9F,IAgBMI,EAA4BC,IAAOC,IAAX,KAYfC,EA5BG,SAACV,GAAW,IACnBW,EAAiCX,EAAjCW,cAAeC,EAAkBZ,EAAlBY,eAEtB,OACI,kBAACL,EAAD,KACA,yBAAKM,UAAU,iBACX,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAASC,QAAM,EAACC,MAAM,MAAMC,IAAKN,EAAgBO,IAAI,2BACrD,kBAACC,EAAA,EAAD,CAAWC,IAAI,MAAf,IAAsBV,EAAtB,S,qNCVZ,IAeMW,EAAmBd,IAAOC,IAAV,KAaPc,EA5BI,SAACvB,GAAW,IACpBwB,EAAcxB,EAAdwB,WAIP,OAHAC,QAAQC,IAAIF,GAIR,kBAACF,EAAD,KACKE,EAAWG,KAAI,SAAAC,GACZ,OAAO,kBAAC,EAAD,CAAWC,IAAKD,EAAUE,GAAIlB,eAAgBgB,EAAUG,MAAOpB,cAAiBiB,EAAUI,Y,gMCRjH,IAYMC,EAAkBC,IAAMzB,IAAT,KAKN0B,EAjBG,SAACnC,GAAW,IACpBoC,EAAapC,EAAboC,UAIN,OACI,kBAACH,EAAD,KACI,gCAAMG,EAAN,OCHNC,EAAQC,EAAQ,IAASC,QA4DhBC,EAnDH,WAAO,IAAD,EACsCC,mBAAS,IAD/C,mBACTC,EADS,KACYC,EADZ,OAEoBF,mBAAS,IAF7B,mBAETjB,EAFS,KAEGoB,EAFH,KAQVC,EAAa,0DAAsDH,EAAtD,iBA+BnB,OAZAI,qBAAU,WACRT,EACCU,IAAKF,GACLG,MAAK,SAAAC,GACJL,EAAcK,EAAIC,KAAKC,cAClB,CAACT,IAQR,yBAAK7B,UAAU,OACb,kBAAC,EAAD,CAAWuB,UAAW,4BACtB,kBAAC,EAAD,CAASnC,SA9BI,WACf0C,EAAuB,SA6BUzC,UAzBjB,WAChByC,EAAuB,UAwBkCxC,aApBtC,WACnBwC,EAAuB,OAqBrB,6BACA,kBAAC,EAAD,CAAYnB,WAAYA,MCvD9B4B,IAASC,OACT,kBAAC,IAAD,CAAeC,MCRA,IDSf,kBAAC,EAAD,OACAC,SAASC,eAAe,W","file":"static/js/main.a732dbca.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { Button } from 'reactstrap';\nimport styled from 'styled-components'\n\nconst Filters = (props) => {\n    const {showRick, showMorty, showEveryone} = props;\n\n\n\n    return (\n        <div>\n            <Button color= 'primary' onClick={showRick}> Show me alternate Ricks! </Button>{'  '}\n            <Button color='primary' onClick={showMorty}> Show me alternate Mortys! </Button>{'  '}\n            <Button color='primary' onClick={showEveryone}> Show me all characters! </Button>{'  '}\n        </div>\n        ); \n}\n\n\n\n\n\n\nexport default Filters;","// Write your Character component here\nimport React, {useState} from 'react';\nimport styled from 'styled-components';\nimport { Card, Button, CardHeader, CardFooter, CardBody,\n    CardTitle, CardImg, CardText } from 'reactstrap';\n\nconst Character = (props) => {\n    const {variationName, variationImage} = props;\n\n    return (\n        <StyledCharacterContainer>\n        <div className='character-div'>\n            <Card>\n            <CardImg bottom width='50%' src={variationImage} alt='variation of character' />\n            <CardTitle tag='h2'> {variationName} </CardTitle>\n            </Card> \n        </div>\n    </StyledCharacterContainer>\n    );\n};\n\n\nconst StyledCharacterContainer  = styled.div`\n    border: #F4F6F6 solid 1px;\n    background-color: #F8F9F6;\n    width: 35%;\n    padding: 10px;\n    margin: 10px;\n    : hover{\n        background-color: #FDF2E9;}\n\n`\n\n\nexport default Character;","import React, {useState} from 'react';\nimport Character from './Character'\nimport styled from 'styled-components'\n\nconst Characters = (props) => {\n    const {variations} = props\n    console.log(variations)\n    \n\n    return (\n        <StyledCharacters>              \n            {variations.map(variation => {\n                return <Character key={variation.id} variationImage={variation.image} variationName = {variation.name}/>\n            })}\n        </StyledCharacters>\n    );\n};\n\n\nconst StyledCharacters = styled.div`\ndisplay: flex;\nbackground-color: #f1f1f1;\nwidth: auto;\n/* border: red solid 5px; */\nflex-flow: row wrap;\njustify-content: space-around;\n`\n\n\n\n\n\nexport default Characters;","import React from 'react';\nimport style from 'styled-components'\n\n\nconst SiteTitle = (props) => {\n    const{siteTitle} = props;\n\n\n\n    return(\n        <StyledSiteTitle> \n            <h1> {siteTitle} </h1>\n        </StyledSiteTitle>\n    )\n};\n\nconst StyledSiteTitle = style.div`\n@import url('https://fonts.googleapis.com/css2?family=Syne+Tactile&display=swap');\nfont-family: Syne Tactile, cursive;\n`\n\nexport default SiteTitle;","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Filters from './components/Filters'\nimport Characters from './components/Characters'\nimport SiteTitle from './components/SiteTitle'\nimport OverallTracker from './components/OverallTracker'\n// import Character from './components/Character'\n\nconst axios = require('axios').default;\n\n  // Try to think through what state you'll need for this app before starting. Then build out\n  // the state properties here.\n\n  // Fetch characters from the API in an effect hook. Remember, anytime you have a \n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n\nconst App = () => {\n  const [characterOfInterest, setCharacterOfInterest] = useState('');\n  const [variations, setVariations] = useState([]);\n  \n  // const [variationImage, setVariationImage] = useState('');\n  // const [variationName, setVariationName] = useState('');\n\n  //Define where the endpoint to go fetch from is, filter by alive to avoid dead characters\n  const endPointAlive = `https://rickandmortyapi.com/api/character/?name=${characterOfInterest}&status=alive`\n\n\n  //Set state of character of interest to Rick helper for button\n  const showRick = () => {\n    setCharacterOfInterest('rick');\n  }\n  \n  //Set state of character of interest helper to Morty helper for button\n  const showMorty = () => {\n    setCharacterOfInterest('morty');\n  }\n\n  //Set state of character of interest helper to everyone to be used with button\n  const showEveryone = () => {\n    setCharacterOfInterest('');\n  }\n\n  //Set state of which variations, images and names to render\n  useEffect(() => {\n    axios\n    .get (endPointAlive)\n    .then(res => {\n      setVariations(res.data.results)\n      })}, [characterOfInterest]);\n\n  //Loop through the results of the API to push urls to the image slice of state\n  // for (const property in variations) {\n    \n  // }\n  \n  return (\n    <div className=\"App\">\n      <SiteTitle siteTitle={'Rick and Morty Explorer'} />\n      <Filters showRick = {showRick} showMorty = {showMorty} showEveryone={showEveryone}/>\n      {/* <OverallTracker numberOfRicks={numberOfRicks} numberOfMortys={numberOfMortys} /> */}\n      <br></br>\n      <Characters variations={variations}/>\n      {/* <Character /> */}\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ThemeProvider } from 'styled-components'\nimport App from './App';\nimport theme from './theme/index'\n\nReactDOM.render(\n<ThemeProvider theme={theme}>\n<App /></ThemeProvider>,\ndocument.getElementById('root')\n);\n\n","export default {\n    \n}"],"sourceRoot":""}